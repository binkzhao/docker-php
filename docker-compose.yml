version: '2'

services:

  ### Applications Code Container #############################

  applications:
    image: tianon/true
    volumes:
      - ${APPLICATION}:/var/www

  ### PHP-FPM Container #######################################

  php-fpm:
    build:
      context: ./php-fpm
      args:
        - INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS}
        - INSTALL_AEROSPIKE=${PHP_FPM_INSTALL_AEROSPIKE}
        - INSTALL_IMAGEMAGICK=${PHP_FPM_INSTALL_IMAGEMAGICK}
      dockerfile: "Dockerfile-${PHP_VERSION}"
    volumes_from:
      - applications
    volumes:
      - ./php-fpm/php${PHP_VERSION}.ini:/usr/local/etc/php/php.ini
    expose:
      - "9000"
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    environment:
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
    networks:
      - backend

#  php-fpm72:
#    build:
#      context: ./php-fpm
#      dockerfile: "Dockerfile-72"
#    volumes_from:
#      - applications
#    volumes:
#      - ./php-fpm/php72.ini:/usr/local/etc/php/php.ini
#    expose:
#      - "9000"
#    extra_hosts:
#      - "dockerhost:${DOCKER_HOST_IP}"
#      - "biapi.bink.com:172.20.0.1"
#      - "capitalapi.bink.com:172.20.0.1"
#    environment:
#      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
#    networks:
#      - backend

  php-fpm74:
    build:
      context: ./php-fpm
      dockerfile: "Dockerfile-74"
    volumes_from:
      - applications
    volumes:
      - ./php-fpm/php74.ini:/usr/local/etc/php/php.ini
    expose:
      - "9000"
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
      - "biapi.bink.com:172.20.0.1"
      - "capitalapi.bink.com:172.20.0.1"
    environment:
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
    networks:
      - backend

  ### NGINX Server Container ##################################

  nginx:
    build:
      context: ./nginx
      args:
        - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
        - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
    volumes_from:
      - applications
    volumes:
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    depends_on:
      - php-fpm
    networks:
      - frontend
      - backend

  ### MySQL Container #########################################

  mysql:
    build:
      context: ./mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - ${DATA_SAVE_PATH}/mysql:/var/lib/mysql
      - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - backend

  mysql57:
    build:
      context: ./mysql
      dockerfile: "Dockerfile-57"
      args:
        - MYSQL_VERSION=5.7
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - ${DATA_SAVE_PATH}/mysql57:/var/lib/mysql
      - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - "3307:3306"
    networks:
      - backend

  ### Redis Container #########################################

  redis:
    build: ./redis
    volumes:
      - ${DATA_SAVE_PATH}/redis:/data
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - backend

  ### Memcached Container #####################################

  memcached:
    build: ./memcached
    volumes:
      - ${DATA_SAVE_PATH}/memcached:/var/lib/memcached
    ports:
      - "${MEMCACHED_HOST_PORT}:11211"
    networks:
      - backend

  ### RabbitMQ Container ######################################

  #  rabbitmq:
  #    build: ./rabbitmq
  #    ports:
  #      - "${RABBITMQ_NODE_HOST_PORT}:5672"
  #      - "${RABBITMQ_MANAGEMENT_HTTP_HOST_PORT}:15672"
  #      - "${RABBITMQ_MANAGEMENT_HTTPS_HOST_PORT}:15671"
  #    privileged: true
  #    environment:
  #      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
  #      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
  #    networks:
  #      - backend

  ### MongoDB Container #######################################

#  mongo:
#    build: ./mongo
#    ports:
#      - "${MONGODB_PORT}:27017"
#    volumes:
#      - ${DATA_SAVE_PATH}/mongo:/data/db
#      - ./mongo/mongo.conf:/usr/local/etc/mongo/mongo.conf
#    extra_hosts:
#      - "dockerhost:${DOCKER_HOST_IP}"
#    networks:
#      - backend

### Networks Setup ############################################

networks:
  frontend:
    driver: "bridge"
  backend:
    driver: "bridge"

### Volumes Setup #############################################

volumes:
  mysql:
    driver: "local"
  memcached:
    driver: "local"
  redis:
    driver: "local"
  mongo:
    driver: "local"
